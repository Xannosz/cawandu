<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <packaging>war</packaging>
  <groupId>com.itelg.docker</groupId>
  <artifactId>cawandu</artifactId>
  <name>cawandu</name>
  <description></description>
  <url>https://github.com/julian-eggers/cawandu</url>
  <version>0.3.3-RELEASE</version>

  <properties>
    <!-- System -->
    <timestamp>${maven.build.timestamp}</timestamp>
    <maven.build.timestamp.format>dd.MM.yyyy HH:mm</maven.build.timestamp.format>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.version>1.8</java.version>
    <!-- Testing -->
    <cobertura.version>2.7</cobertura.version>
    <coveralls.version>4.1.0</coveralls.version>
    <powermock.version>1.6.6</powermock.version>
    <easymock.version>3.4</easymock.version>
    <!-- UI -->
    <zk.version>8.0.2.2</zk.version>
    <zkspring.version>3.2.0</zkspring.version>
  </properties>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>1.5.6.RELEASE</version>
  </parent>

  <repositories>
    <repository>
      <id>zkoss</id>
      <url>http://mavensync.zkoss.org/maven2</url>
    </repository>
    <repository>
      <id>jaggl</id>
      <url>http://mvn.jaggl.de</url>
    </repository>
  </repositories>

  <dependencies>
    <!-- Spring Boot Core -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-tomcat</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-undertow</artifactId>
    </dependency>

    <!-- ZK -->
    <dependency>
      <groupId>org.zkoss.zk</groupId>
      <artifactId>zkspring-core</artifactId>
      <version>${zkspring.version}</version>
      <exclusions>
        <exclusion>
          <artifactId>slf4j-api</artifactId>
          <groupId>org.slf4j</groupId>
        </exclusion>
        <exclusion>
          <artifactId>logback-classic</artifactId>
          <groupId>ch.qos.logback</groupId>
        </exclusion>
        <exclusion>
          <groupId>javax.servlet</groupId>
          <artifactId>servlet-api</artifactId>
        </exclusion>
        <exclusion>
          <artifactId>google-collections</artifactId>
          <groupId>com.google.collections</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.zkoss.zk</groupId>
      <artifactId>zkbind</artifactId>
      <version>${zk.version}</version>
    </dependency>
    <dependency>
      <groupId>org.zkoss.zk</groupId>
      <artifactId>zul</artifactId>
      <version>${zk.version}</version>
      <exclusions>
        <exclusion>
          <artifactId>slf4j-jdk14</artifactId>
          <groupId>org.slf4j</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.zkoss.zk</groupId>
      <artifactId>zkplus</artifactId>
      <version>${zk.version}</version>
    </dependency>
    <dependency>
      <groupId>de.jaggl.utils</groupId>
      <artifactId>events-zk</artifactId>
      <version>1.1.2-RELEASE</version>
    </dependency>
    <dependency>
      <groupId>com.itelg</groupId>
      <artifactId>zkoss-helper</artifactId>
      <version>0.3.0-RELEASE</version>
    </dependency>

    <!-- Logging & Monitoring -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jolokia</groupId>
      <artifactId>jolokia-core</artifactId>
    </dependency>

    <!-- Testing -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymock</artifactId>
      <version>${easymock.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-module-junit4</artifactId>
      <version>${powermock.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-api-easymock</artifactId>
      <version>${powermock.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Other -->
    <dependency>
      <groupId>com.spotify</groupId>
      <artifactId>docker-client</artifactId>
      <version>7.0.2</version>
    </dependency>
    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.3</version>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <scm>
    <url>https://github.com/julian-eggers/cawandu</url>
    <connection>scm:git:https://github.com/julian-eggers/cawandu.git</connection>
    <developerConnection>scm:git:https://github.com/julian-eggers/cawandu.git</developerConnection>
  </scm>

  <developers>
    <developer>
      <name>Julian Eggers</name>
      <email>eggers.julian@gmail.com</email>
    </developer>
  </developers>

  <licenses>
    <license>
      <name>MIT License</name>
      <url>http://www.opensource.org/licenses/mit-license.php</url>
    </license>
  </licenses>

  <build>
    <finalName>${project.artifactId}</finalName>
    <resources>
      <resource>
        <directory>src/main/resources/</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <plugins>
      <!-- BUILD AND FILES -->
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <outputEncoding>UTF-8</outputEncoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>pl.project13.maven</groupId>
        <artifactId>git-commit-id-plugin</artifactId>
      </plugin>
      <!-- TEST AND COVERAGE -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <version>${cobertura.version}</version>
        <configuration>
          <format>xml</format>
          <instrumentation>
            <excludes>
              <exclude>**/*Configuration.class</exclude>
              <exclude>**/*Application.class</exclude>
            </excludes>
          </instrumentation>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.eluder.coveralls</groupId>
        <artifactId>coveralls-maven-plugin</artifactId>
        <version>${coveralls.version}</version>
      </plugin>
      <!-- DEPLOYMENT -->
      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>1.0.0</version>
        <configuration>
          <serverId>dockerhub-jeggers</serverId>
          <imageName>jeggers/${project.artifactId}</imageName>
          <forceTags>true</forceTags>
          <imageTags>
            <imageTag>${project.version}</imageTag>
            <imageTag>0.3</imageTag>
            <imageTag>latest</imageTag>
          </imageTags>
          <baseImage>openjdk:8-jre-alpine</baseImage>
          <volumes>
            <volume>/var/log/apps</volume>
          </volumes>
          <env>
            <REGISTRY_USERNAME></REGISTRY_USERNAME>
            <REGISTRY_EMAIL></REGISTRY_EMAIL>
            <REGISTRY_PASSWORD></REGISTRY_PASSWORD>
            <HOST_URI></HOST_URI>
            <HOST_CERTIFICATES></HOST_CERTIFICATES>
            <HTTP_PORT>7777</HTTP_PORT>
            <PULL_MODE>RUNNING</PULL_MODE>
            <MAX_HEAP>200M</MAX_HEAP>
            <JAVA_OPTS>-Dfoo=bar</JAVA_OPTS>
          </env>
          <cmd>["/bin/sh", "-c", "java -Ddocker.registry.username=${REGISTRY_USERNAME} -Ddocker.registry.email=${REGISTRY_EMAIL} -Ddocker.registry.password=${REGISTRY_PASSWORD} -Ddocker.host.uri=${HOST_URI} -Ddocker.host.certificates.directory=${HOST_CERTIFICATES} -Dtask.pullImages.pullMode=${PULL_MODE} -Dserver.port=${HTTP_PORT} -Dfile.encoding=UTF-8 -Xmx${MAX_HEAP} ${JAVA_OPTS} -jar /${project.build.finalName}.${project.packaging}"]</cmd>
          <resources>
            <resource>
              <targetPath>/</targetPath>
              <directory>${project.build.directory}</directory>
              <include>${project.build.finalName}.${project.packaging}</include>
            </resource>
          </resources>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>